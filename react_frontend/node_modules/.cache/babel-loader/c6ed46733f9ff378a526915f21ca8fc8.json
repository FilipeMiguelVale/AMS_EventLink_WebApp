{"ast":null,"code":"import _regeneratorRuntime from\"/home/filipe/Desktop/PEI/git/PEI/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/filipe/Desktop/PEI/git/PEI/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/import React from\"react\";// react plugin used to create google maps\nimport{GoogleMap,Marker,withGoogleMap,withScriptjs}from\"react-google-maps\";// reactstrap components\nimport{Card,Container,Row}from\"reactstrap\";// core components\nimport Header from\"../../components/Headers/Header.js\";import Maps from\"./Maps_Component.js\";class Maps_Page extends React.Component{constructor(props){super(props);this.getAllLocations=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,result,all_locations,i;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/list_accidents\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:result=_context.sent;all_locations=[];for(i=0;i<result.length;i++){all_locations.push({lat:result[i][\"location\"][\"lat\"],lng:result[i][\"location\"][\"lng\"],id:result[i][\"id\"]});}return _context.abrupt(\"return\",all_locations);case 9:case\"end\":return _context.stop();}},_callee);}));this.get_my_location=function(){if(navigator.geolocation){return new Promise((resolve,reject)=>navigator.geolocation.getCurrentPosition(resolve,reject));}else{return new Promise(resolve=>resolve({}));}};this.state={markers:[],initial_position:{lat:0,lng:0}};}componentDidMount(){Promise.all([this.get_my_location(),this.getAllLocations()]).then(values=>{this.setState(prevState=>({markers:values[1],initial_position:{lat:values[0].coords.latitude,lng:values[0].coords.longitude}}));});}render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Container,{className:\"mt--7\",fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow border-0\"},/*#__PURE__*/React.createElement(Maps,{markers:this.state.markers,Location:this.state.initial_position,googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD4aWR3SBGaa1oB0CuDf2vptnJfSMSguZU\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),center:this.state.initial_position,zoom:10,containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"600px\"},className:\"map-canvas\",id:\"map-canvas\"}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\",borderRadius:\"inherit\"}})}))))));}}export default Maps_Page;","map":{"version":3,"sources":["/home/filipe/Desktop/PEI/git/PEI/react_frontend/src/views/examples/Maps_Page.js"],"names":["React","GoogleMap","Marker","withGoogleMap","withScriptjs","Card","Container","Row","Header","Maps","Maps_Page","Component","constructor","props","getAllLocations","fetch","response","json","result","all_locations","i","length","push","lat","lng","id","get_my_location","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","state","markers","initial_position","componentDidMount","all","then","values","setState","prevState","coords","latitude","longitude","render","height","borderRadius"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\n// reactstrap components\nimport {Card, Container, Row} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\nimport Maps from \"./Maps_Component.js\";\n\n\nclass Maps_Page extends React.Component {\n\n  constructor(props){\n    super(props)\n\n    this.state = {\n      markers: [],\n      initial_position: {\n        lat: 0,\n        lng: 0\n      }\n    } \n  }\n\n  getAllLocations = async () => {\n    \n    let response = await fetch(\n      `/list_accidents`);\n    let result = await response.json();\n    let all_locations = [];\n    for (let i=0; i < result.length; i++){\n      all_locations.push(\n        {\n          lat: result[i][\"location\"][\"lat\"],\n          lng: result[i][\"location\"][\"lng\"],\n          id: result[i][\"id\"]\n        }\n      )\n    }\n    return all_locations;\n  }\n\n  get_my_location = function () {\n    if (navigator.geolocation) {\n      return new Promise(\n        (resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject)\n      )\n    } else {\n      return new Promise(\n        resolve => resolve({})\n      )\n    }\n  }\n\n  componentDidMount() {\n\n    Promise.all([this.get_my_location(),this.getAllLocations()]).then((\n      (values => \n        {\n          this.setState(prevState => (\n            {\n              markers: values[1],\n              initial_position:{\n                lat: values[0].coords.latitude,\n                lng: values[0].coords.longitude\n              }\n            }))\n        }\n      )))\n  }\n\n\n  render() \n  {\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <Maps\n                  markers={this.state.markers}\n                  Location={this.state.initial_position}\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD4aWR3SBGaa1oB0CuDf2vptnJfSMSguZU\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  center = {this.state.initial_position}\n                  zoom = {10}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps_Page;\n"]},"metadata":{},"sourceType":"module"}