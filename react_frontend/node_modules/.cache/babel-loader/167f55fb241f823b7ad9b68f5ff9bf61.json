{"ast":null,"code":"import React from\"react\";// react plugin used to create google maps\nimport{GoogleMap,Marker,withGoogleMap,withScriptjs}from\"react-google-maps\";// core components\nconst MapWrapper=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{defaultCenter:{lat:props.defaultCenter.lat,lng:props.defaultCenter.lng},defaultZoom:props.zoom,defaultOptions:{scrollwheel:false}},props.markers.map(props=>/*#__PURE__*/React.createElement(Marker,{position:{lat:props.lat,lng:props.lng},options:{icon:\"/accident_icon/\".concat(props.id)},onClick:()=>{if(props.id){window.location.href=\"/#admin/accident_details/\".concat(props.id);}}})))));class Maps extends React.Component{constructor(props){super(props);this.get_my_location=()=>{if(navigator.geolocation){return new Promise((resolve,reject)=>navigator.geolocation.getCurrentPosition(resolve,reject));}else{return new Promise(resolve=>resolve({}));}};this.state={lat:0,lng:0};}componentDidMount(){Promise.all([this.get_my_location()]).then(value=>{this.setState({lat:value[0].coords.latitude,lng:value[0].coords.longitude});});}render(){return/*#__PURE__*/React.createElement(MapWrapper,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),defaultCenter:this.state,zoom:this.props.zoom,markers:this.props.markers,containerElement:/*#__PURE__*/React.createElement(\"div\",{className:\"map-canvas\",id:\"map-canvas\"}),mapElement:this.props.mapElement});}}export default Maps;","map":{"version":3,"sources":["/home/filipe/Desktop/PEI/git/PEI/react_frontend/src/views/examples/Maps_Component.js"],"names":["React","GoogleMap","Marker","withGoogleMap","withScriptjs","MapWrapper","props","lat","defaultCenter","lng","zoom","scrollwheel","markers","map","icon","id","window","location","href","Maps","Component","constructor","get_my_location","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","state","componentDidMount","all","then","value","setState","coords","latitude","longitude","render","height","mapElement"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAAQC,SAAR,CAAmBC,MAAnB,CAA2BC,aAA3B,CAA0CC,YAA1C,KAA6D,mBAA7D,CACA;AAGA,KAAMC,CAAAA,UAAU,CAAGD,YAAY,CAC3BD,aAAa,CAACG,KAAK,eAAI,oBAAC,SAAD,EACf,aAAa,CAAG,CAACC,GAAG,CAAED,KAAK,CAACE,aAAN,CAAoBD,GAA1B,CAA+BE,GAAG,CAAEH,KAAK,CAACE,aAAN,CAAoBC,GAAxD,CADD,CAEf,WAAW,CAAEH,KAAK,CAACI,IAFJ,CAGf,cAAc,CAAE,CACdC,WAAW,CAAE,KADC,CAHD,EAOlBL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBP,KAAK,eACtB,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACC,GAAG,CAAED,KAAK,CAACC,GAAZ,CAAiBE,GAAG,CAAEH,KAAK,CAACG,GAA5B,CAAlB,CACC,OAAO,CAAE,CAACK,IAAI,0BAAmBR,KAAK,CAACS,EAAzB,CAAL,CADV,CAEC,OAAO,CAAG,IACT,CAAE,GAAGT,KAAK,CAACS,EAAT,CACE,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,oCAAkDZ,KAAK,CAACS,EAAxD,EAA6D,CAC/D,CALL,EADD,CAPkB,CAAV,CADc,CAA/B,CAsBA,KAAMI,CAAAA,IAAN,QAAmBnB,CAAAA,KAAK,CAACoB,SAAU,CAEjCC,WAAW,CAACf,KAAD,CAAO,CAChB,MAAMA,KAAN,EADgB,KAiBlBgB,eAjBkB,CAiBA,IAAM,CACtB,GAAIC,SAAS,CAACC,WAAd,CAA2B,CACzB,MAAO,IAAIC,CAAAA,OAAJ,CACL,CAACC,OAAD,CAAUC,MAAV,GAAqBJ,SAAS,CAACC,WAAV,CAAsBI,kBAAtB,CAAyCF,OAAzC,CAAkDC,MAAlD,CADhB,CAAP,CAGD,CAJD,IAIO,CACL,MAAO,IAAIF,CAAAA,OAAJ,CACLC,OAAO,EAAIA,OAAO,CAAC,EAAD,CADb,CAAP,CAGD,CACF,CA3BiB,CAEhB,KAAKG,KAAL,CAAa,CACXtB,GAAG,CAAE,CADM,CAEXE,GAAG,CAAE,CAFM,CAAb,CAID,CAEDqB,iBAAiB,EAAE,CACjBL,OAAO,CAACM,GAAR,CAAY,CAAC,KAAKT,eAAL,EAAD,CAAZ,EAAsCU,IAAtC,CAA4CC,KAAD,EAAW,CACpD,KAAKC,QAAL,CACE,CACE3B,GAAG,CAAE0B,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,CAAgBC,QADvB,CAEE3B,GAAG,CAAEwB,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,CAAgBE,SAFvB,CADF,EAIK,CALP,EAMD,CAcDC,MAAM,EACN,CACE,mBACA,oBAAC,UAAD,EACI,YAAY,CAAC,qFADjB,CAEI,cAAc,cAAE,2BAAK,KAAK,CAAE,CAAEC,MAAM,OAAR,CAAZ,EAFpB,CAGI,aAAa,CAAI,KAAKV,KAH1B,CAII,IAAI,CAAI,KAAKvB,KAAL,CAAWI,IAJvB,CAKI,OAAO,CAAI,KAAKJ,KAAL,CAAWM,OAL1B,CAMI,gBAAgB,cACZ,2BACI,SAAS,CAAC,YADd,CAEI,EAAE,CAAC,YAFP,EAPR,CAYI,UAAU,CAAE,KAAKN,KAAL,CAAWkC,UAZ3B,EADA,CAiBD,CAlDgC,CAqDnC,cAAerB,CAAAA,IAAf","sourcesContent":["import React from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\n// core components\n\n\nconst MapWrapper = withScriptjs(\n    withGoogleMap(props => <GoogleMap\n            defaultCenter= {{lat: props.defaultCenter.lat, lng: props.defaultCenter.lng}}\n            defaultZoom={props.zoom}\n            defaultOptions={{\n              scrollwheel: false,\n            }}\n        >\n        {props.markers.map(props =>\n          <Marker position={{lat: props.lat, lng: props.lng}}\n           options={{icon:`/accident_icon/${props.id}`}}\n           onClick={(() => \n            { if(props.id)\n                {window.location.href =`/#admin/accident_details/${props.id}`}\n              }\n              )}\n             />\n        )}\n        </GoogleMap>\n\n    ));\n\nclass Maps extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      lat: 0,\n      lng: 0\n    }\n  }\n\n  componentDidMount(){\n    Promise.all([this.get_my_location()]).then((value) => {\n      this.setState(\n        {\n          lat: value[0].coords.latitude,\n          lng: value[0].coords.longitude\n        })})\n  }\n\n  get_my_location = () => {\n    if (navigator.geolocation) {\n      return new Promise(\n        (resolve, reject) => navigator.geolocation.getCurrentPosition(resolve, reject)\n      )\n    } else {\n      return new Promise(\n        resolve => resolve({})\n      )\n    }\n  }\n\n  render() \n  {\n    return (\n    <MapWrapper\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        defaultCenter = {this.state}\n        zoom = {this.props.zoom}\n        markers = {this.props.markers}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={this.props.mapElement}\n    />\n\n    );\n  }\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}