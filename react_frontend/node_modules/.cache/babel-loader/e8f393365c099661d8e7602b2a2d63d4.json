{"ast":null,"code":"import _regeneratorRuntime from\"/home/ricardoaz/Documents/UA/DashboardARC/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/home/ricardoaz/Documents/UA/DashboardARC/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/home/ricardoaz/Documents/UA/DashboardARC/react_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/import React,{useEffect,useState}from\"react\";// react plugin used to create google maps\nimport{GoogleMap,Marker,withGoogleMap,withScriptjs,MarkerProps}from\"react-google-maps\";// reactstrap components\nimport{Card,Container,Row}from\"reactstrap\";// core components\nimport Header from\"../../components/Headers/Header.js\";const MapWrapper=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:12,defaultCenter:{lat:props.currentLocation.lat,lng:props.currentLocation.lng},defaultOptions:{scrollwheel:false,styles:[{featureType:\"administrative\",elementType:\"labels.text.fill\",stylers:[{color:\"#444444\"}]},{featureType:\"landscape\",elementType:\"all\",stylers:[{color:\"#f2f2f2\"}]},{featureType:\"poi\",elementType:\"all\",stylers:[{visibility:\"off\"}]},{featureType:\"road\",elementType:\"all\",stylers:[{saturation:-100},{lightness:45}]},{featureType:\"road.highway\",elementType:\"all\",stylers:[{visibility:\"simplified\"}]},{featureType:\"road.arterial\",elementType:\"labels.icon\",stylers:[{visibility:\"off\"}]},{featureType:\"transit\",elementType:\"all\",stylers:[{visibility:\"off\"}]},{featureType:\"water\",elementType:\"all\",stylers:[{color:\"#5e72e4\"},{visibility:\"on\"}]}]}},/*#__PURE__*/React.createElement(Marker,{position:{lat:props.markerLocation.lat,lng:props.markerLocation.lng}}))));class Maps extends React.Component{constructor(props){var _this;super(props);_this=this;this.getLocation=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('/accident/1');case 2:response=_context.sent;_context.next=5;return response.json();case 5:result=_context.sent;_this.setState(prevState=>({markerLatLng:_objectSpread({},prevState.markerLatLng,{lat:result[\"location\"][\"lat\"],lng:result[\"location\"][\"lng\"]})}));case 7:case\"end\":return _context.stop();}},_callee);}));this.showCurrentLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{this.setState(prevState=>({currentLatLng:_objectSpread({},prevState.currentLatLng,{lat:position.coords.latitude,lng:position.coords.longitude}),isMarkerShown:true}));});}};this.state={markerLatLng:{lat:0,lng:0},currentLatLng:{lat:0,lng:0}};}componentDidMount(){this.showCurrentLocation();this.getLocation();}render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(Container,{className:\"mt--7\",fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Card,{className:\"shadow border-0\"},/*#__PURE__*/React.createElement(MapWrapper,{currentLocation:this.state.currentLatLng,markerLocation:this.state.markerLatLng,googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD4aWR3SBGaa1oB0CuDf2vptnJfSMSguZU\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"600px\"},className:\"map-canvas\",id:\"map-canvas\"}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\",borderRadius:\"inherit\"}})/* markers={<Marker position={this.state.location}/>}*/}))))));}}export default Maps;","map":{"version":3,"sources":["/home/ricardoaz/Documents/UA/DashboardARC/react_frontend/src/views/examples/Maps.js"],"names":["React","useEffect","useState","GoogleMap","Marker","withGoogleMap","withScriptjs","MarkerProps","Card","Container","Row","Header","MapWrapper","props","lat","currentLocation","lng","scrollwheel","styles","featureType","elementType","stylers","color","visibility","saturation","lightness","markerLocation","Maps","Component","constructor","getLocation","fetch","response","json","result","setState","prevState","markerLatLng","showCurrentLocation","navigator","geolocation","getCurrentPosition","position","currentLatLng","coords","latitude","longitude","isMarkerShown","state","componentDidMount","render","height","borderRadius"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, {useEffect, useState} from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs, MarkerProps} from \"react-google-maps\";\n// reactstrap components\nimport {Card, Container, Row} from \"reactstrap\";\n// core components\nimport Header from \"../../components/Headers/Header.js\";\n\n\nconst MapWrapper = withScriptjs(\n    withGoogleMap(props => <GoogleMap\n            defaultZoom={12}\n            defaultCenter={{ lat: props.currentLocation.lat, lng: props.currentLocation.lng }}\n            defaultOptions={{\n              scrollwheel: false,\n              styles: [\n                {\n                  featureType: \"administrative\",\n                  elementType: \"labels.text.fill\",\n                  stylers: [{color: \"#444444\"}]\n                },\n                {\n                  featureType: \"landscape\",\n                  elementType: \"all\",\n                  stylers: [{color: \"#f2f2f2\"}]\n                },\n                {\n                  featureType: \"poi\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"off\"}]\n                },\n                {\n                  featureType: \"road\",\n                  elementType: \"all\",\n                  stylers: [{saturation: -100}, {lightness: 45}]\n                },\n                {\n                  featureType: \"road.highway\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"simplified\"}]\n                },\n                {\n                  featureType: \"road.arterial\",\n                  elementType: \"labels.icon\",\n                  stylers: [{visibility: \"off\"}]\n                },\n                {\n                  featureType: \"transit\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"off\"}]\n                },\n                {\n                  featureType: \"water\",\n                  elementType: \"all\",\n                  stylers: [{color: \"#5e72e4\"}, {visibility: \"on\"}]\n                }\n              ]\n            }}\n        >\n        <Marker position={{ lat: props.markerLocation.lat, lng: props.markerLocation.lng }}/>\n        </GoogleMap>\n    ));\n\n\nclass Maps extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      markerLatLng: {\n        lat: 0,\n        lng: 0\n      },\n      currentLatLng:{\n        lat: 0,\n        lng: 0\n      }\n    }\n  }\n\n  getLocation = async () => {\n    const response = await fetch(\n        '/accident/1');\n    const result = await response.json();\n    this.setState(prevState => ({\n      markerLatLng: {\n        ...prevState.markerLatLng,\n        lat: result[\"location\"][\"lat\"],\n        lng: result[\"location\"][\"lng\"]\n      }\n    }))\n  };\n\n  showCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n          position => {\n            this.setState(prevState => ({\n              currentLatLng: {\n                ...prevState.currentLatLng,\n                lat: position.coords.latitude,\n                lng: position.coords.longitude\n              },\n              isMarkerShown: true\n            }))\n          }\n      )\n    }\n  };\n\n  componentDidMount(): void {\n    this.showCurrentLocation();\n    this.getLocation()\n  }\n\n  render() {\n\n    return (\n      <>\n        <Header />\n        {/* Page content */}\n        <Container className=\"mt--7\" fluid>\n          <Row>\n            <div className=\"col\">\n              <Card className=\"shadow border-0\">\n                <MapWrapper\n                  currentLocation={this.state.currentLatLng}\n                  markerLocation={this.state.markerLatLng}\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD4aWR3SBGaa1oB0CuDf2vptnJfSMSguZU\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={\n                    <div\n                      style={{ height: `600px` }}\n                      className=\"map-canvas\"\n                      id=\"map-canvas\"\n                    />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, borderRadius: \"inherit\" }} />\n                  }\n                 /* markers={<Marker position={this.state.location}/>}*/\n                />\n              </Card>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}