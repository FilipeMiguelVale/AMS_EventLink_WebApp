{"ast":null,"code":"import React from\"react\";// react plugin used to create google maps\nimport{GoogleMap,Marker,withGoogleMap,withScriptjs}from\"react-google-maps\";// reactstrap components\nimport{Card}from\"reactstrap\";// core components\nconst MapWrapper=withScriptjs(withGoogleMap(props=>/*#__PURE__*/React.createElement(GoogleMap,{center:{lat:props.center.lat,lng:props.center.lng},defaultZoom:18,defaultOptions:{scrollwheel:false,styles:[{featureType:\"administrative\",elementType:\"labels.text.fill\",stylers:[{color:\"#444444\"}]},{featureType:\"landscape\",elementType:\"all\",stylers:[{color:\"#f2f2f2\"}]},{featureType:\"poi\",elementType:\"all\",stylers:[{visibility:\"off\"}]},{featureType:\"road\",elementType:\"all\",stylers:[{saturation:-100},{lightness:45}]},{featureType:\"road.highway\",elementType:\"all\",stylers:[{visibility:\"simplified\"}]},{featureType:\"road.arterial\",elementType:\"labels.icon\",stylers:[{visibility:\"off\"}]},{featureType:\"transit\",elementType:\"all\",stylers:[{visibility:\"on\"}]},{featureType:\"water\",elementType:\"all\",stylers:[{color:\"#5e72e4\"},{visibility:\"on\"}]}]}},/*#__PURE__*/React.createElement(Marker,{position:{lat:props.Location.lat,lng:props.Location.lng}}))));class Maps extends React.Component{constructor(props){super(props);}render(){console.log(this.children);return/*#__PURE__*/React.createElement(MapWrapper,{Location:this.props.Location,googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),center:this.props.center,containerElement:/*#__PURE__*/React.createElement(\"div\",{className:\"map-canvas\",id:\"map-canvas\"}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"85%\",borderRadius:\"inherit\"}})});}}export default Maps;","map":{"version":3,"sources":["/home/filipe/Desktop/PEI/git/PEI/react_frontend/src/views/examples/Maps_Component.js"],"names":["React","GoogleMap","Marker","withGoogleMap","withScriptjs","Card","MapWrapper","props","lat","center","lng","scrollwheel","styles","featureType","elementType","stylers","color","visibility","saturation","lightness","Location","Maps","Component","constructor","render","console","log","children","height","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\n// react plugin used to create google maps\nimport {GoogleMap, Marker, withGoogleMap, withScriptjs} from \"react-google-maps\";\n// reactstrap components\nimport {Card} from \"reactstrap\";\n// core components\n\n\nconst MapWrapper = withScriptjs(\n    withGoogleMap(props => <GoogleMap\n            center = {{lat: props.center.lat, lng: props.center.lng}}\n            defaultZoom={18}\n            defaultOptions={{\n              scrollwheel: false,\n              styles: [\n                {\n                  featureType: \"administrative\",\n                  elementType: \"labels.text.fill\",\n                  stylers: [{color: \"#444444\"}]\n                },\n                {\n                  featureType: \"landscape\",\n                  elementType: \"all\",\n                  stylers: [{color: \"#f2f2f2\"}]\n                },\n                {\n                  featureType: \"poi\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"off\"}]\n                },\n                {\n                  featureType: \"road\",\n                  elementType: \"all\",\n                  stylers: [{saturation: -100}, {lightness: 45}]\n                },\n                {\n                  featureType: \"road.highway\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"simplified\"}]\n                },\n                {\n                  featureType: \"road.arterial\",\n                  elementType: \"labels.icon\",\n                  stylers: [{visibility: \"off\"}]\n                },\n                {\n                  featureType: \"transit\",\n                  elementType: \"all\",\n                  stylers: [{visibility: \"on\"}]\n                },\n                {\n                  featureType: \"water\",\n                  elementType: \"all\",\n                  stylers: [{color: \"#5e72e4\"}, {visibility: \"on\"}]\n                }\n              ]\n            }}\n        >\n        <Marker position={{lat: props.Location.lat, lng: props.Location.lng}}/>\n        </GoogleMap>\n    ));\n\n\nclass Maps extends React.Component {\n\n  constructor(props) {\n    super(props);\n    }\n\n  render() \n  {\n    console.log(this.children)\n    return (\n\n    <MapWrapper\n        Location={this.props.Location}\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLG_2KgktdQJXLaeyQZHJzmvcSjNwoPM\"\n        loadingElement={<div style={{ height: `100%` }} />}\n        center = {this.props.center}\n        containerElement={\n            <div\n                className=\"map-canvas\"\n                id=\"map-canvas\"\n            />\n        }\n        mapElement={\n            <div style={{ height: `85%`, borderRadius: \"inherit\" }} />\n        }\n    />\n\n    );\n  }\n}\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}